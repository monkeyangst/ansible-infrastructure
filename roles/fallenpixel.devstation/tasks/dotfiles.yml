---
- name: Install Prerequisites
  ansible.builtin.package:
    name:
      - zsh
      - stow
      - git
    state: present
  become: true
- name: Clone dotfiles
  ansible.builtin.git:
    repo: 'git@github.com:fallenpixel/dotfiles.git'
    dest: "{{ ansible_env.HOME }}/.dotfiles"
- name: Check .zshrc
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.zshrc"
  register: zshrc
- name: Remove non-linked zshrc
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: absent
  when: zshrc.stat.islink is defined and zshrc.stat.islnk == "false"
- name: Check tmux directory
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.tmux"
  register: tmux
- name: Remove tmux link
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.tmux"
    state: absent
  when: tmux.stat.islink is defined and tmux.stat.islink == "true"
- name: Create tmux plugins directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.tmux/plugins"
    state: directory
- name: Stow
  ansible.builtin.command:
    cmd: stow "{{ item.package }}"
    chdir: "{{ ansible_env.HOME }}/.dotfiles"
    creates: "{{ ansible_env.HOME }}{{ item.creates }}"
  with_items:
    - {package: "zsh", creates: ".zshrc"}
    - {package: "nvim", creates: ".config/nvim"}
    - {package: "latex", creates: "Templates/assignment.tex"}
    - {package: "tmux", creates: ".tmux.conf"}
- name: Update tmux plugins
  ansible.builtin.command:
    cmd: "{{ ansible_env.HOME }}/.tmux/plugins/tpm/bin/install_plugins }}"
    creates: ~/.tmux/plugins/tmux-power/
- name: Update shell
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    shell: '/bin/zsh'
  become: true
